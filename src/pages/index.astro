<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Hex Expansion Game</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      background-color: #f5f5f5;
    }

    .hex-grid {
      position: relative;
      display: grid;
      grid-template-columns: repeat(9, 60px); /* Ширина сетки */
      grid-auto-rows: 52px; /* Высота строки */
      gap: 0; /* Без промежутков */
      justify-content: center;
    }

    .hex {
      position: relative;
      width: 60px;
      height: 52px;
      background-color: #fff;
      border: 1px solid #ccc;
      clip-path: polygon(
        50% 0%,
        100% 25%,
        100% 75%,
        50% 100%,
        0% 75%,
        0% 25%
      );
      transition: background-color 0.2s;
      cursor: pointer;
    }

    .hex:hover {
      background-color: #e0e0e0;
    }

    .hex.active {
      background-color: #cce5ff;
      border: 2px solid #007bff;
    }
  </style>
</head>
<body>
  <div id="hexGrid" class="hex-grid">
    <!-- Изначальный центральный гекс -->
    <div class="hex active" data-x="0" data-y="0"></div>
  </div>

  <script>
    // Инициализация сетки и логики
    const hexGrid = document.getElementById('hexGrid');

    // Смещения для соседних гексов
    const neighborOffsets = [
      { x: 0, y: -1 },  // Верхний
      { x: 1, y: -1 },  // Верхний правый
      { x: 1, y: 0 },   // Правый
      { x: 0, y: 1 },   // Нижний
      { x: -1, y: 1 },  // Нижний левый
      { x: -1, y: 0 },  // Левый
    ];

    // Храним состояние сетки (координаты активных гексов)
    const activeHexes = new Set(["0,0"]);

    // Добавление нового гекса
    function addHex(x, y) {
      // Если гекс уже существует, ничего не делаем
      if (activeHexes.has(`${x},${y}`)) return;

      // Создаем новый элемент
      const newHex = document.createElement('div');
      newHex.classList.add('hex');
      newHex.dataset.x = x;
      newHex.dataset.y = y;

      // Добавляем обработчик клика
      newHex.addEventListener('click', () => expandHex(x, y));

      // Добавляем гекс в сетку
      hexGrid.appendChild(newHex);
    }

    // Расширение сетки при клике
    function expandHex(x, y) {
      // Если гекс уже активен, ничего не делаем
      if (activeHexes.has(`${x},${y}`)) return;

      // Активируем текущий гекс
      activeHexes.add(`${x},${y}`);
      const currentHex = document.querySelector(`[data-x="${x}"][data-y="${y}"]`);
      if (currentHex) currentHex.classList.add('active');

      // Добавляем соседние гексы
      neighborOffsets.forEach(offset => {
        const newX = x + offset.x;
        const newY = y + offset.y;
        addHex(newX, newY);
      });
    }

    // Инициализация (добавление клика для стартового гекса)
    document.querySelector('.hex.active').addEventListener('click', () => expandHex(0, 0));
  </script>
</body>
</html>
